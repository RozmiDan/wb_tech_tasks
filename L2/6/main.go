package main

import (
	"fmt"
)

/*
Изначально мы имеем слайс стрингов с len = 3 и cap = 3
Как известно в Go все передается копией, поэтому при передаче слайса в ф-ю
мы скопируем структуру слайса (указатель на элемент массива, len и cap)
первым действием мы изменяем нулевой элемент
вторым шагом мы добавляем элемент и из-за того что len превысит текущее cap,
произойдет аллокация памяти x2 от cap и скопирются элементы из оригинального слайса в новый
после чего из append вернется указатель на новый слайс и дальше вся работа будет происходить уже с ним
поэтому в ответе мы увидим только 3 2 3
*/

func main() {
	var s = []string{"1", "2", "3"}
	modifySlice(s)
	fmt.Println(s[:]) // {"3", "5", "3"}
}

func modifySlice(i []string) { // copy string struct
	i[0] = "3"         // src {"3", "2", "3"}, len = 3, cap = 3
	i = append(i, "4") // src{"3", "2", "3"}, new {"3", "2", "3", "4"}, len = 4, cap = 6
	i[1] = "5"         // new{"3", "5", "3", "4"}, len = 4, cap = 3
	i = append(i, "6") // new{"3", "5", "3", "4", "6"}, len = 5, cap = 6
}
